syntax = "proto3";

option cc_enable_arenas = true;

package spex;

//=============================================================================
// Common types

message NamesList {
  uint32          left  = 1;
  repeated string names = 2;
}

enum ResourceType {
  RESOURCE_UNKNOWN   = 0;
  RESOURCE_METALS    = 1;
  RESOURCE_SILICATES = 2;
  RESOURCE_ICE       = 3;
  RESOURCE_LABOR     = 101;
}

message ResourceItem {
  ResourceType type  = 1;
  double       amount = 2;
}

message Property {
  string            name   = 1;
  string            value  = 2;
  repeated Property nested = 3;
}

message Blueprint {
  string                name       = 1;
  repeated Property     properties = 2;
  repeated ResourceItem expenses   = 3;
}

message Position {
  double x   = 1;
  double y   = 2;
  double vx  = 4;
  double vy  = 5;
}

//=============================================================================
// Modules interfaces

message IAccessPanel {

  message LoginRequest {
    string login    = 1;
    string password = 2;
    string ip       = 3;
    uint32 port     = 4;
  }
  
  oneof choice {
    LoginRequest login     = 1;
    
    uint32 access_granted  = 21;
    string access_rejected = 22;
  }
}


message IEngine
{
  message Specification {
    uint32 max_thrust = 1;
  }

  message ChangeThrust {
    double x           = 1;
    double y           = 2;
    uint32 thrust      = 4;
    uint32 duration_ms = 5;
  }

  message CurrentThrust {
    double x      = 1;
    double y      = 2;
    uint32 thrust = 4;
  }

  oneof choice {
    bool         specification_req = 1;
    ChangeThrust change_thrust     = 2;
    bool         thrust_req        = 3;

    Specification specification = 21;
    CurrentThrust thrust        = 22;
  }
}


message IShip {
  message State {
    double weight = 1;
  }

  oneof choice {
    bool state_req = 1;

    State state = 21;
  }
}


message INavigation {
  
  oneof choice {
    bool position_req = 1;
    
    Position position = 21;
  }
}


message ICelestialScanner {

  enum Status {
    SUCCESS      = 0;
    SCANNER_BUSY = 1;
  }

  message Specification {
    uint32 max_radius_km      = 1;
    uint32 processing_time_us = 2;
  }

  message Scan {
    uint32 scanning_radius_km = 1;
    uint32 minimal_radius_m   = 2;
  }

  message AsteroidInfo {
    uint32 id = 1;
    double x  = 2;
    double y  = 3;
    double vx = 4;
    double vy = 5;
    double r  = 6;
  }

  message ScanResults {
    repeated AsteroidInfo asteroids = 1;
    uint32                left      = 2;
  }

  oneof choice {
    bool specification_req = 1;
    Scan scan              = 2;
    
    Specification specification   = 21;
    ScanResults   scanning_report = 22;
    Status        scanning_failed = 23;
  }
}

message IAsteroidScanner {

  enum Status {
    IN_PROGRESS        = 0;
    SCANNER_BUSY       = 1;
    ASTEROID_TOO_FAR   = 2;
  }

  message Specification {
    uint32 max_distance     = 1;
    uint32 scanning_time_ms = 2;
  }
  
  message ScanResult {
    uint32 asteroid_id       = 1;
    double weight            = 2;
    double metals_percent    = 3;
    double ice_percent       = 4;
    double silicates_percent = 5;
  }

  oneof choice {
    bool   specification_req = 1;
    uint32 scan_asteroid     = 2;
    
    Specification specification     = 21;
    Status        scanning_status   = 22;
    ScanResult    scanning_finished = 23;
  }
}


message IResourceContainer {

  enum Status {
    SUCCESS               = 0;
    INTERNAL_ERROR        = 1;
    PORT_ALREADY_OPEN     = 2;
    PORT_DOESNT_EXIST     = 3;
    PORT_IS_NOT_OPENED    = 4;
    PORT_HAS_BEEN_CLOSED  = 5;
    INVALID_ACCESS_KEY    = 6;
    INVALID_RESOURCE_TYPE = 7;
    PORT_TOO_FAR          = 8;
    TRANSFER_IN_PROGRESS  = 9;
    NOT_ENOUGH_RESOURCES  = 10;
  }
  
  message Content {
    uint32 volume = 1;
    double used   = 2;
    repeated ResourceItem resources = 3;
  }

  message Transfer {
    uint32 port_id        = 1;
    uint32 access_key     = 2;
    ResourceItem resource = 3;
  }
  
  oneof choice {
    // Requests and command from Client
    bool           content_req       = 1;
    uint32         open_port         = 2;
    bool           close_port        = 3;
    Transfer       transfer          = 4;
    
    Content        content            = 21;
    uint32         port_opened        = 22;
    Status         open_port_failed   = 23;
    Status         close_port_status  = 24;
    Status         transfer_status    = 25;
    ResourceItem   transfer_report    = 26;
    Status         transfer_finished  = 27;
  }
}


message IAsteroidMiner {

  enum Status {
    SUCCESS               = 0;
    INTERNAL_ERROR        = 1;
    ASTEROID_DOESNT_EXIST = 2;
    MINER_IS_BUSY         = 3;
    MINER_IS_IDLE         = 4;
    ASTEROID_TOO_FAR      = 5;
    NO_SPACE_AVALIABLE    = 6;
    NOT_BINT_TO_CARGO     = 7;
  }

  message Specification {
    uint32 max_distance    = 1;
    uint32 cycle_time_ms   = 2;
    uint32 yield_per_cycle = 3;
  }

  message MiningTask {
    uint32       asteroid_id = 1;
    ResourceType resource    = 2;
  }

  oneof choice {
    bool          specification_req = 1;
    string        bind_to_cargo     = 2;
    MiningTask    start_mining      = 3;
    bool          stop_mining       = 4;

    Specification specification        = 21;
    Status        bind_to_cargo_status = 22;
    Status        start_mining_status  = 23;
    ResourceItem  mining_report        = 24;
    Status        stop_mining_status   = 25;
    Status        on_error             = 26;
  }

}


message IBlueprintsLibrary {

  enum Status {
    SUCCESS             = 0;
    INTERNAL_ERROR      = 1;
    BLUEPRINT_NOT_FOUND = 2;
  }
  
  oneof choice {
    string    blueprints_list_req = 1;
    string    blueprint_req       = 2;
    
    NamesList blueprints_list     = 20;
    Blueprint blueprint           = 21;
    Status    blueprint_fail      = 22;
  }
}


message IShipyard {

  enum Status {
    SUCCESS             = 0;
    INTERNAL_ERROR      = 1;

    BUILD_STARTED       = 2;
    BUILD_CANCELED      = 3;
    BUILD_FREEZED       = 4;
    BUILD_FAILED        = 5;
    BLUEPRINT_NOT_FOUND = 6;

    SHIPYARD_IS_BUSY    = 7;
  }

  message Specification {
    double labor_per_sec = 1;
  }
  
  message StartBuild {
    string blueprint_name = 1;
    string ship_name      = 2;
  }

  message ShipBuilt {
    string ship_name = 1;
    uint32 slot_id   = 2;
  }

  oneof choice {
    bool       specification_req = 1;
    StartBuild start_build       = 2;
    bool       cancel_build      = 3;
    
    Specification specification     = 20;
    Status        building_status   = 21;
    double        building_progress = 22;
    ShipBuilt     building_complete = 23;
  }

}


message ICommutator {

  enum Status {
    SUCCESS            = 0;
    INVALID_SLOT       = 1;
    MODULE_OFFLINE     = 2;
    REJECTED_BY_MODULE = 3;
    INVALID_TUNNEL     = 4;
  }
  
  message ModuleInfo {
    uint32 slot_id     = 1;
    string module_type = 2;
    string module_name = 3;
  }

  oneof choice {
    // Requests and command from Client
    bool       total_slots_req      = 1;
    uint32     module_info_req      = 2;
    bool       all_modules_info_req = 3;
    uint32     open_tunnel          = 4;
    uint32     close_tunnel         = 5;

    // Responces and indications from server
    uint32     total_slots         = 21;
    ModuleInfo module_info         = 22;
    uint32     open_tunnel_report  = 23;
    Status     open_tunnel_failed  = 24;
    uint32     close_tunnel_report = 25;
    Status     close_tunnel_failed = 26;
  }
}


message IGame {

  message Score {
    string player = 1;
    uint32 score  = 2;
  }

  message GameOver {
    repeated Score leaders = 1;
  }

  oneof choice {
    GameOver game_over_report = 21;
  }
}

message ISystemClock {

  oneof choice {
    bool   time_req   = 1;
    uint64 wait_until = 2;
    uint64 wait_for   = 3;

    uint64 time = 21;
    uint64 ring = 22;
  }

}

message Message {
  uint32 tunnelId = 1;
  uint64 timestamp = 2;

  oneof choice {
    // All possible interfaces are listed here
    Message            encapsulated       = 12;
    IAccessPanel       accessPanel        = 13;
    ICommutator        commutator         = 14;
    IShip              ship               = 15;
    INavigation        navigation         = 16;
    IEngine            engine             = 17;
    ICelestialScanner  celestial_scanner  = 18;
    IAsteroidScanner   asteroid_scanner   = 19;
    IResourceContainer resource_container = 20;
    IAsteroidMiner     asteroid_miner     = 21;
    IBlueprintsLibrary blueprints_library = 22;
    IShipyard          shipyard           = 23;
    IGame              game               = 24;
    ISystemClock       system_clock       = 25;
  }
}
